apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
def android_builder_version = "4.0.1"

ext {
    android_builder_main_version = Integer.parseInt(android_builder_version.split("\\.")[0])
    android_builder_mid_version = Integer.parseInt(android_builder_version.split("\\.")[1])
}
android {
    this.rootProject.buildscript.configurations.classpath
            .resolvedConfiguration
            .firstLevelModuleDependencies.
            each {
                def name = it.name
                if (name.contains('com.android.tools.build:gradle')) {
                    def moduleVersion = it.moduleVersion
                    if (moduleVersion.contains("-")) {
                        def alphaversionArray = moduleVersion.split("-")[0]
                        def versionArray = alphaversionArray.toString().split("\\.")
                        ext.android_builder_main_version = Integer.parseInt(versionArray[0])
                        ext.android_builder_mid_version = Integer.parseInt(versionArray[1])
                    } else {
                        version = moduleVersion
                        android_builder_version = moduleVersion
                        ext.android_builder_main_version = Integer.parseInt(android_builder_version.split("\\.")[0])
                        ext.android_builder_mid_version = Integer.parseInt(android_builder_version.split("\\.")[1])
                    }
                }
            }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.jetpackcomposeplayground"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    buildFeatures {
        if (android_builder_main_version >= 7 || (android_builder_main_version > 4 && android_builder_mid_version > 1)) {
            compose true
        }
    }
    composeOptions {
        kotlinCompilerVersion "${versions.kotlinCompilerVersion}"
        kotlinCompilerExtensionVersion "${versions.compose}"
    }

    // Added to avoid this error -
    // Execution failed for task ':app:mergeDebugAndroidTestJavaResource'.
    // > A failure occurred while executing com.android.build.gradle.internal.tasks.MergeJavaResWorkAction
    // > 2 files found with path 'META-INF/AL2.0' from inputs:
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation deps.kotlinStdLib

    // Support Libraries
    implementation deps.support.appCompat
    implementation deps.support.ktx
    implementation deps.support.ktxViewModel
    implementation deps.support.ktxLiveData
    implementation deps.support.lifecycleExtensions

    // CardView
    implementation deps.cardView

    // Constraint Layout
    implementation deps.constraintLayout

    // Coroutine
    implementation deps.coroutine.core

    // Compose
    if (android_builder_main_version < 7) {
        add("kotlinCompilerPluginClasspath", "androidx.compose.compiler:compiler:${versions.compose}")
    }
    implementation deps.compose.activityCompose
    implementation deps.compose.composeRuntime
    implementation deps.compose.constraintLayout
    implementation deps.compose.core
    implementation deps.compose.foundation
    implementation deps.compose.tooling
    implementation deps.compose.layout
    implementation deps.compose.material
    implementation deps.compose.savedInstanceState
    implementation deps.compose.uiLiveData
    androidTestImplementation deps.compose.uiTest


    // Image loading
    implementation deps.imageLoading.picasso
    implementation deps.imageLoading.glideCore

    testImplementation deps.test.junit
    androidTestImplementation deps.test.junitImplementation
}
